name: Continuous Deployment

on:
  push:
    branches:
      - master

jobs:
  staging_deploy:
    runs-on: ubuntu-latest
    environment: Staging
    steps:
      - uses: actions/checkout@v2 
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Build and push docker image
        run: |
          docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }}
          export NEW_TAG="v$(git rev-parse --short HEAD)";
          echo "New tag: $NEW_TAG";
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/fyle_netsuite-api:$NEW_TAG .
          echo "Pushing Docker Image to Docker Hub";
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/fyle_netsuite-api:$NEW_TAG
          echo "NEW_TAG=v$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      - name: Run CodeBuild
        uses: aws-actions/aws-codebuild-run-build@v1
        with:
          project-name: ${{ secrets.CODEBUILD_PROJECT_NAME }}
          env-vars-for-codebuild: |
            requester,
            event-name,
            NEW_TAG,
            DOCKERHUB_USERNAME
        env:
          requester: ${{ github.actor }}
          event-name: ${{ github.event_name }}
          NEW_TAG: ${{ env.NEW_TAG }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: Staging Deploy Status - ${{ job.status }}
          SLACK_TITLE: Deploy NetSuite API to Staging
          SLACK_ICON_EMOJI: ":pepeok:"
          SLACK_USERNAME: NSAPI
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_FOOTER: ''
